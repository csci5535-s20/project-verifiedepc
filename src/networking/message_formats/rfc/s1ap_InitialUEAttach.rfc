// **************************************************************
// S1AP-Common-DataTypes
// **************************************************************


enum {
  REJECT(1),
  IGNORE(2),
  NOTIFY(3),
  (7)
 } Criticality;

 enum {
  OPTIONAL(1),
  CONDITIONAL(2),
  MANDATORY(3),
  (7)
 } Presence;

 struct{	// TODO: Choice, oneof ( is Union correct)
 	uint16 local;
 	opaque global<0..2^16-1>;
 }PrivateIEID;


 enum {
  INITIATING_MESSAGE(1),
  SUCCESSFUL_OUTCOME(2),
  UNSUCCESSFULOUTCOME(3),
  (7)
 }TriggeringMesage;


uint8 ProcedureCode;				// INTEGER (0..255)
uint16 ProtocolExtensionID; 		// INTEGER (0..65535)
uint16 ProtocolIEID; 				// INTEGER (0..65535)


// **************************************************************
// S1AP-Constants
// **************************************************************

/* TODO: Need to insert/initialize the Constant Values
struct ConstLists {
  // Map from feature name to feature list.
  map<string, FeatureList> constants_list = 1;
}*/

// Extension Constants
uint16 maxPrivateIEs 					= 65535;
uint16 maxProtocolExtensions 			= 65535;
uint16 maxProtocolIEs					= 65535;

// List Lengths
uint16 maxNrOfCSGs							= 256;
uint16 maxNrOfE-RABs						= 256;
uint16 maxnoofTAIs							= 256;
uint16 maxnoofTACs							= 256;
uint16 maxNrOfErrors						= 256;
uint16 maxnoofBPLMNs						= 6;
uint16 maxnoofPLMNsPerMME					= 32;
uint16 maxnoofEPLMNs						= 15;
uint16 maxnoofEPLMNsPlusOne				= 16;
uint16 maxnoofForbLACs						= 4096;
uint16 maxnoofForbTACs						= 4096;
uint16 maxNrOfIndividualS1ConnectionsToReset = 256;
uint16 maxnoofCells						= 16;
uint16 maxnoofTAIforWarning				= 65535 ;
uint16 maxnoofCellID						= 65535 ;
uint16 maxnoofEmergencyAreaID				= 65535 ;
uint16 maxnoofCellinTAI					= 65535 ;
uint16 maxnoofCellinEAI					= 65535 ;
uint16 maxnoofeNBX2TLAs					= 2;
uint16 maxnoofRATs							= 8;
uint16 maxnoofGroupIDs						= 65535;
uint16 maxnoofMMECs						= 256

// Elementary Procedures 

enum{
	ID_HandoverPreparation_PC(0),
	ID_HandoverResourceAllocation_PC( 1),
	ID_HandoverNotification_PC( 2),
	ID_PathSwitchRequest_PC( 3),
	ID_HandoverCancel_PC( 4),
	ID_E_RABSetup_PC( 5),
	ID_E_RABModify_PC( 6),
	ID_E_RABRelease_PC( 7),
	ID_E_RABReleaseIndication_PC( 8),
	ID_InitialContextSetup_PC( 9),
	ID_Paging_PC( 10),
	ID_downlinkNASTransport_PC( 11),
	ID_initialUEMessage_PC( 12),
	ID_uplinkNASTransport_PC( 13),
	ID_Reset_PC( 14),
	ID_ErrorIndication_PC( 15),
	ID_NASNonDeliveryIndication_PC( 16),
	ID_S1Setup_PC( 17),
	ID_UEContextReleaseRequest_PC( 18),
	ID_DownlinkS1cdma2000tunneling_PC( 19),
	ID_UplinkS1cdma2000tunneling_PC( 20),
	ID_UEContextModification_PC( 21),
	ID_UECapabilityInfoIndication_PC( 22),
	ID_UEContextRelease_PC( 23),
	ID_eNBStatusTransfer_PC( 24),
	ID_MMEStatusTransfer_PC( 25),
	ID_DeactivateTrace_PC( 26),
	ID_TraceStart_PC( 27),
	ID_TraceFailureIndication_PC( 28),
	ID_ENBConfigurationUpdate_PC( 29),
	ID_MMEConfigurationUpdate_PC( 30),
	ID_LocationReportingControl_PC( 31),
	ID_LocationReportingFailureIndication_PC( 32),
	ID_LocationReport_PC( 33),
	ID_OverloadStart_PC( 34),
	ID_OverloadStop_PC( 35),
	ID_WriteReplaceWarning_PC( 36),
	ID_eNBDirectInformationTransfer_PC( 37),
	ID_MMEDirectInformationTransfer_PC( 38),
	ID_PrivateMessage_PC( 39),
	ID_eNBConfigurationTransfer_PC( 40),
	ID_MMEConfigurationTransfer_PC( 41),
	ID_CellTrafficTrace_PC( 42),
	(255)
}ProcedureCode;





// IE-s

enum {
	ID_MME_UE_S1AP_ID_PIEID( 0),
	ID_HandoverType_PIEID( 1),
	ID_Cause_PIEID( 2),
	ID_SourceID_PIEID( 3),
	ID_TargetID_PIEID( 4),
	ID_eNB_UE_S1AP_ID_PIEID( 8),
	ID_E_RABSubjecttoDataForwardingList_PIEID( 12),
	ID_E_RABtoReleaseListHOCmd_PIEID( 13),
	ID_E_RABDataForwardingItem_PIEID( 14),
	ID_E_RABReleaseItemBearerRelComp_PIEID( 15),
	ID_E_RABToBeSetupListBearerSUReq_PIEID( 16),
	ID_E_RABToBeSetupItemBearerSUReq_PIEID( 17),
	ID_E_RABAdmittedList_PIEID( 18),
	ID_E_RABFailedToSetupListHOReqAck_PIEID( 19),
	ID_E_RABAdmittedItem_PIEID( 20),
	ID_E_RABFailedtoSetupItemHOReqAck_PIEID( 21),
	ID_E_RABToBeSwitchedDLList_PIEID( 22),
	ID_E_RABToBeSwitchedDLItem_PIEID( 23),
	ID_E_RABToBeSetupListCtxtSUReq_PIEID( 24),
	ID_TraceActivation_PIEID( 25),
	ID_NAS_PDU_PIEID( 26),
	ID_E_RABToBeSetupItemHOReq_PIEID( 27),
	ID_E_RABSetupListBearerSURes_PIEID( 28),
	ID_E_RABFailedToSetupListBearerSURes_PIEID( 29),
	ID_E_RABToBeModifiedListBearerModReq_PIEID( 30),
	ID_E_RABModifyListBearerModRes_PIEID( 31),
	ID_E_RABFailedToModifyList_PIEID( 32),
	ID_E_RABToBeReleasedList_PIEID( 33),
	ID_E_RABFailedToReleaseList_PIEID( 34),
	ID_E_RABItem_PIEID( 35),
	ID_E_RABToBeModifiedItemBearerModReq_PIEID( 36),
	ID_E_RABModifyItemBearerModRes_PIEID( 37),
	ID_E_RABReleaseItem_PIEID( 38),
	ID_E_RABSetupItemBearerSURes_PIEID( 39),
	ID_SecurityContext_PIEID( 40),
	ID_HandoverRestrictionList_PIEID( 41),
	ID_UEPagingID_PIEID( 43),
	ID_pagingDRX_PIEID( 44),
	ID_TAIList_PIEID( 46),
	ID_TAIItem_PIEID( 47),
	ID_E_RABFailedToSetupListCtxtSURes_PIEID( 48),
	ID_E_RABReleaseItemHOCmd_PIEID( 49),
	ID_E_RABSetupItemCtxtSURes_PIEID( 50),
	ID_E_RABSetupListCtxtSURes_PIEID( 51),
	ID_E_RABToBeSetupItemCtxtSUReq_PIEID( 52),
	ID_E_RABToBeSetupListHOReq_PIEID( 53),
	ID_GERANtoLTEHOInformationRes_PIEID( 55),
	ID_UTRANtoLTEHOInformationRes_PIEID( 57),
	ID_CriticalityDiagnostics_PIEID( 58),
	ID_Global_ENB_ID_PIEID( 59),
	ID_eNBname_PIEID( 60),
	ID_MMEname_PIEID( 61),
	ID_ServedPLMNs_PIEID( 63),
	ID_SupportedTAs_PIEID( 64),
	ID_TimeToWait_PIEID( 65),
	ID_uEaggregateMaximumBitrate_PIEID( 66),
	ID_TAI_PIEID( 67),
	ID_E_RABReleaseListBearerRelComp_PIEID( 69),
	ID_cdma2000PDU_PIEID( 70),
	ID_cdma2000RATType_PIEID( 71),
	ID_cdma2000SectorID_PIEID( 72),
	ID_SecurityKey_PIEID( 73),
	ID_UERadioCapability_PIEID( 74),
	ID_GUMMEI_ID_PIEID( 75),
	ID_E_RABInformationListItem_PIEID( 78),
	ID_Direct_Forwarding_Path_Availability_PIEID( 79),
	ID_UEIdentityIndexValue_PIEID( 80),
	ID_cdma2000HOStatus_PIEID( 83),
	ID_cdma2000HORequiredIndication_PIEID( 84),
	ID_E_UTRAN_Trace_ID_PIEID( 86),
	ID_RelativeMMECapacity_PIEID( 87),
	ID_SourceMME_UE_S1AP_ID_PIEID( 88),
	ID_Bearers_SubjectToStatusTransfer_Item_PIEID( 89),
	ID_eNB_StatusTransfer_TransparentContainer_PIEID( 90),
	ID_UE_associatedLogicalS1_ConnectionItem_PIEID( 91),
	ID_ResetType_PIEID( 92),
	ID_UE_associatedLogicalS1_ConnectionListResAck_PIEID( 93),
	ID_E_RABToBeSwitchedULItem_PIEID( 94),
	ID_E_RABToBeSwitchedULList_PIEID( 95),
	ID_S_TMSI_PIEID( 96),
	ID_cdma2000OneXRAND_PIEID( 97),
	ID_RequestType_PIEID( 98),
	ID_UE_S1AP_IDs_PIEID( 99),
	ID_EUTRAN_CGI_PIEID( 100),
	ID_OverloadResponse_PIEID( 101),
	ID_cdma2000OneXSRVCCInfo_PIEID( 102),
	ID_E_RABFailedToBeReleasedList_PIEID( 103),
	ID_Source_ToTarget_TransparentContainer_PIEID( 104),
	ID_ServedGUMMEIs_PIEID( 105),
	ID_SubscriberProfileIDforRFP_PIEID( 106),
	ID_UESecurityCapabilities_PIEID( 107),
	ID_CSFallbackIndicator_PIEID( 108),
	ID_CNDomain_PIEID( 109),
	ID_E_RABReleasedList_PIEID( 110),
	ID_MessageIdentifier_PIEID( 111),
	ID_SerialNumber_PIEID( 112),
	ID_WarningAreaList_PIEID( 113),
	ID_RepetitionPeriod_PIEID( 114),
	ID_NumberofBroadcastRequest_PIEID( 115),
	ID_WarningType_PIEID( 116),
	ID_WarningSecurityInfo_PIEID( 117),
	ID_DataCodingScheme_PIEID( 118),
	ID_WarningMessageContents_PIEID( 119),
	ID_BroadcastCompletedAreaList_PIEID( 120),
	ID_Inter_SystemInformationTransferTypeEDT_PIEID( 121),
	ID_Inter_SystemInformationTransferTypeMDT_PIEID( 122),
	ID_Target_ToSource_TransparentContainer_PIEID( 123),
	ID_SRVCCOperationPossible_PIEID( 124),
	ID_SRVCCHOIndication_PIEID( 125),
	ID_NAS_DownlinkCount_PIEID( 126),
	ID_CSG_Id_PIEID( 127),
	ID_CSG_IdList_PIEID( 128),
	ID_SONConfigurationTransferECT_PIEID( 129),
	ID_SONConfigurationTransferMCT_PIEID( 130),
	ID_TraceCollectionEntityIPAddress_PIEID( 131),
	ID_MSClassmark2_PIEID( 132),
	ID_MSClassmark3_PIEID( 133),
	ID_RRC_Establishment_Cause_PIEID( 134),
	ID_NASSecurityParametersfromE_UTRAN_PIEID( 135),
	ID_NASSecurityParameterstoE_UTRAN_PIEID( 136),
	ID_DefaultPagingDRX_PIEID( 137),
	ID_Source_ToTarget_TransparentContainer_Secondary_PIEID( 138),
	ID_Target_ToSource_TransparentContainer_Secondary_PIEID( 139),
	(65535)
}ProtocolIEID;


// **************************************************************
// Container definitions
// **************************************************************


struct {
	ProtocolIEID 							id(1);		//UNIQUE
	Criticality 							criticality(2);
	opaque 									value(3);
	Presence 								presence(4);
}S1apProtocolIES;


struct {
	ProtocolIEID 							id(1);		//UNIQUE
	Criticality 							first_criticality(2);
	opaque 									first_value(3);
	Criticality 							second_criticality(4);
	opaque 									second_value(5);
	Presence 								presence(6);
}S1apProtocolIESPair;

struct {
	ProtocolIEID 							id(1);			//UNIQUE
	Criticality 							criticality(2);
	Extension 								extension(3);
	Presence 								presence(4);
}S1apProtocolExtension;

struct {
	ProtocolIEID 							id(1);
	Criticality 							criticality(2);
	opaque 									value(3);
	Presence 								presence(4);
}S1apPrivateIES;


// **************************************************************
// S1AP-IE DEFINITIONS
// **************************************************************


uint8 RelativeMMECapacity 							//INTEGER (0..255)
uint8 SubscriberProfileIDforRFP 					//INTEGER (1..256) 
uint32 ENB_UE_S1AP_ID 								// INTEGER (0..16777215)
uint64 MME_UE_S1AP_ID							 	//INTEGER (0..4294967295).  MMEUES1APID
uint64 BitRate;



string MMEName<1..150> 										// PrintableString (SIZE (1..150,...))
string ENBName<1..150> 					//(SIZE (1..150,...))
string TBCDString[3] 					//::= OCTET STRING (SIZE (3))
TBCDString  PLMNIdentity;
PLMNidentity BPLMNs;

string CellIdentity
string MMECode[1] 					// OCTET STRING (SIZE (1))
string MTMSI[4]						//OCTET STRING (SIZE (4))
string CSGId[27]
string MMEGroupID[2]  				// OCTET STRING (SIZE (2))
string TAC[2] 						//::= OCTET STRING (SIZE (2))
string LAC[2]
string SecurityKey[256]  			// BIT STRING (SIZE(256))
string TransportLayerAddress[160]  	// BIT STRING (SIZE(1..160, ...))
string InterfacesToTrace[8] 		//BIT STRING (SIZE (8))
string EUTRANTraceID[8]  			//  OCTET STRING (SIZE (8))


string NAS_PDU<1..2^16-1>										//OCTET STRING
string UERadioCapability<1..2^16-1>								//OCTET STRING
string EncryptionAlgorithms<16..2^16-1> 						// BIT STRING (SIZE (16,...))
string IntegrityProtectionAlgorithms<16..2^16-1> 				// BIT STRING (SIZE (16,...))






enum{ 
	CS_FALLBACK_REQUIRED,
	CS_FALLBACK_HIGH_PRIORITY
} CSFallbackIndicator;

enum {
	V32,
	V64,
	V128,
	v256,
	}PagingDRX;

enum {
	EMERGENCY,
	HIGH_PRIORITY_ACCESS,
	MT_ACCESS,
	MO_SIGNALLING,
	MO_DATA,
}RRCEstablishmentCause;


enum {
	V1S, 
	V2S,
	V5S, 
	V10S,
	V20S,
	V60S,
}TimeToWait;


enum {
	POSSIBLE,
}SRVCCOperationPossible;


struct {
	string macro_enb_id<0..20>; 	//BIT STRING (SIZE(20))
	string home_enb_id<0..28>; 		// BIT STRING (SIZE(28)),
}ENBID;



struct {
	PLMNIdentity plmn_identity; 
	CellIdentity cell_identity; 
	EUTRAN_CGIExtIEs ie_extensions<MINSIZE..MAXSIZE> 
}EUTRAN_CGI;


struct {
	PLMNIdentity 		plmn_identity;
	TAC 					tac;
	opaque TAIExtIEs ie_extensions<0..2^16-1>; 
}TAI;

struct {
	MMECode 		mmec;
	MTMSI 			m_tmsi;
	opaque STMSIExtIEs 	ie_extensions<0..2^16-1>;
}S_TMSI;


struct {
	PLMNIdentity 	plmn_identity; 
	MMEGroupID   	mme_group_id;
	MMECode 			mme_code; 
	opaque GUMMEIExtIEs ie_extensions<0..2^16-1>;
}GUMMEI;

struct {
	PLMNIdentity 	plmn_identity; 
	ENBID 			enb_id; 
	opaque globalENBIDExtIEs ie_extensions<0..2^16-1>;
}GlobalENBID;

// -- C

struct {
	CauseRadioNetwork radioNetwork<0..2>;
	CauseTransport	transport;
	CauseNas 		nas;
	CauseProtocol 	protocol;
	CauseMisc 	misc<0..2>;
}Cause;

enum {	
	CONTROL_PROCESSING_OVERLOAD(1),
	NOT_ENOUGH_USER_PLANE_PROCESSING_RESOURCES(2),
	HARDWARE_FAILURE(3),
	OM_INTERVENTION(4),
	UNSPECIFIED(5),
	UNKNOWN_PLMN(6)
}CauseMisc;

enum{
	TRANSFER_SYNTAX_ERROR(1),
	ABSTRACT_SYNTAX_ERROR_REJECT(2),
	ABSTRACT_SYNTAX_ERROR_IGNORE_AND_NOTIFY(3),
	MESSAGE_NOT_COMPATIBLE_WITH_RECEIVER_STATE(4),
	SEMANTIC_ERROR(5),
	ABSTRACT_SYNTAX_ERROR_FALSELY_CONSTRUCTED_MESSAGE(6),
	UNSPECIFIED(7)	
}CauseProtocol;

enum {  // TODO: Complete list
	UNSPECIFIED(1),
	SUCCESSFUL_HANDOVER(2)
	(63)
	}CauseRadioNetwork;

enum {
	TRANSPORT_RESOURCE_UNAVAILABLE(1),
	UNSPECIFIED(2),
	(63)
}CauseTransport;

enum {
	NORMAL_RELEASE,
	AUTHENTICATION_FAILURE,
	DETACH,
	UNSPECIFIED,
	(63)
}CauseNas;


struct {
	CSGId 				csg_id;
	opaque CSGIdListItemExtIEs ie_extensions<0..2^16-1>;
}CSGIdListItem;

// Todo: Size(CSGIdListItem)*maxNOfCSGs
CSGIdListItem CSGIdList<0..2^16-1>


struct {
	ProcedureCode 			procedure_code<0..4>;
	TriggeringMessage 		triggering_message<0..4>;
	Criticality 			triggering_criticiality<0..4>;
	CriticalityDiagnosticsIEList 	ies_criticality_diagnostics<0..4>;
	opaque CriticalityDiagnosticsExtIEs ie_extensions<0..2^16-1>;
}CriticalityDiagnostics;


//TODO: size(CriticalityDiagnosticsIEItem)*maxNrOfErrors
CriticalityDiagnosticsIEItem CriticalityDiagnosticsIEList<0..2^16-1>


struct {
	Criticality 			ie_criticality;
	ProtocolIEID 			ie_id;
	TypeOfError 			type_of_error;
	opqaue CriticalityDiagnosticsIEItemExtIEs ie_extensions<0..2^16-1>;
}CriticalityDiagnosticsIEItem; 

// -- E

// TODO: size(PLMNIdentity)*maxnoofEPLMNs)
PLMNIdentity EPLMNs<3..2^4-1>;

ERABItemIEs ERABList<3..2^16-1>

struct  {	 	// INTEGER (0..15, ...)
	uint8 	id_1<0..1>;
	uint64 	id_2<0..8>;
}E_RAB_ID;

struct {
	E_RAB_ID 			e_rab_id;
	Cause 				cause;
	opaque ERABItemExtIEs ie_extensions<0..2^16-1>;
}ERABItem;


// -- F

enum {
	ALL, 
	GERAN,
	UTRAN,
	CDMA2000
}ForbiddenInterRATs;

//TODO: size(ForbiddenTAsItem)*maxnoofEPLMNsPlusOne
ForbiddenTAsItem ForbiddenTAs<3..2^16-1>;


struct {
	PLMNIdentity 		plmn_identity;
	ForbiddenTACs 		forbidden_tacs;
	opaque ForbiddenTAsItemExtIEs ie_extensions<0..2^16-1>;
}ForbiddenTAsItem;

//TODO: size(TAC)*maxnoofForbTACs)
TAC ForbiddenTACs<2..2^16-1>;


//TODO: size(ForbiddenLAsItem)*maxnoofEPLMNsPlusOne)
ForbiddenLAsItem ForbiddenLAs<2..2^16-1>;


struct {
	PLMNIdentity 	plmn_identity;
	ForbiddenLACs 	forbidden_identity;
	opaque ForbiddenLAsItemExtIEs ie_extensions<0..2^16-1>;
}ForbiddenLAsItem;

// TODO: size(LAC)*maxnoofForbLACs)
LAC ForbiddenLACs<2..2^16-1>

// -- H


struct {
	PLMNIdentity 		serving_plmn;
	EPLMNs 		equivalent_plmns<0..SIZE>; //TODO: What's the size of each item? 
	ForbiddenTAs forbidden_tas<0..SIZE>;
	ForbiddenLAs forbidden_las<0..SIZE>;
	ForbiddenInterRATs forbidden_inter_rats<0..SIZE>;
	opaque HandoverRestrictionListExtIEs ie_extensions<0..2^16-1>; 
}HandoverRestrictionList;


// +++++++++++++++++++++++++++++++++++++++++++++++
// -- S

//TODO: size(SupportedTAsItem)* maxnoofTACs)
SupportedTAsItem SupportedTAs<4..2^16-1>

struct {
	TAC 					tac;
	BPLMNs 					broadcastPLMNs;
	opaque SupportedTAsItemExtIEs 	ie_extensions<0..2^16-1>;
}SupportedTAsItem;



//TODO: size(ServedGUMMEIsItem)*(maxnoofRATs)
ServedGUMMEIsItem ServedGUMMEIs<8..2^16-1> 

//TODO: size(maxnoofGroupIDs)
MMEGroupID ServedGroupIDs<8..2^16-1>


//TODO : size(maxnoofMMECs) ServedMMECs
MMECode ServedMMECs<8..2^16-1>

//TODO: size(maxnoofPLMNsPerMME)
PLMNidentity ServedPLMNs<8..2^16-1>

struct {
	ServedPLMNs 			served_plmns;
	ServedGroupIDs 			served_group_ids;
	ServedMMECs 			served_mmecs;
	opque ServedGUMMEIsItemExtIEs ie_extensions<0..2^16-1>;
}ServedGUMMEIsItem;

// -- T


struct {
	EUTRANTraceID 			eutran_trace_id;
	InterfacesToTrace 		interfaces_to_trace;
	TraceDepth 				trace_depth;
	TransportLayerAddress 	trace_collection_entity_ip_address;
	opaque TraceActivationExtIEs 	ie_extensions<0..2^16-1>; 
}TraceActivation;



enum { 
	MINIMUM,
	MEDIUM,
	MAXIMUM,
	MINIMUM_WITHOUT_VENDOR_SPECIFIC_EXTENSION,
	MEDIUM_WITHOUT_VENDOR_SPECIFIC_EXTENSION,
	MAXIMUM_WITHOUT_VENDOR_SPECIFIC_EXTENSION,
}TraceDepth;



// -- U

struct {
	BitRate 					ue_aggregate_maximum_bitrate_dl;
	BitRate 	 				ue_aggregate_maximum_bitrate_ul;
	opaque UEAggregateMaximumBitratesExtIEs ie_extensions<0..2^16-1>;
}UEAggregateMaximumBitrate;




struct {
	EncryptionAlgorithms 			encryption_algorithms,
	IntegrityProtectionAlgorithms 	integrity_protection_algorithms,
	opaque UESecurityCapabilitiesExtIEs 	ie_extensions<0..2^16-1>;
}UESecurityCapabilities;

// **************************************************************
// S1AP-PDU-CONTENTS
// **************************************************************

enum {
	MME_UE_S1AP_ID_IE, 				// MME_UE_S1AP_ID,
	MME_NAME_IE, 					// MMEName,
	ENB_UE_S1AP_ID_IE, 				// ENB_UE_S1AP_ID,
	ENB_NAME_IE, 					// ENBName,
	NAS_PDU_IE, 					// NAS_PDU
	TIME_TO_WAIT_IE, 				// TimeToWait,
	CAUSE_IE, 						// Cause,
	TAI_IE, 						// TAI
	EUTRAN_CGI_IE, 					// EUTRAN_CGI,
	S_TMSI_IE, 						// S_TMSI,
	CSGID_IE, 						// CSGId,
	GUMMEI_IE,  					// GUMMEI,
	GLOBAL_ENB_ID_IE, 				// GlobalENBID,
	SUPPORTED_TAS_IE, 				// SupportedTAs,
	PAGING_DRX_IE, 					// PagingDRX,
	CSGID_LIST_IE, 					// CSGIdList ,
	SERVED_GUMMEIS_IE, 				// ServedGUMMEIs,
	RELATIVE_MME_CAPACITY_IE, 		// RelativeMMECapacity,
	CRITICALITY_DIAGNOSTICS_IE, 	// CriticalityDiagnostics,
	UE_RADIO_CAPABILITY_IE, 			// UERadioCapability,
	UE_AGGREGATE_MAX_BITRATE_IE, 	// UEAggregateMaximumBitrate,
	UE_SECURITY_CAPABILITIES_IE, 		// UESecurityCapabilities,
	SECURITY_KEY_IE, 					// SecurityKey,
	TRACE_ACTIVATION_IE, 				// TraceActivation,
	HANDOVER_RESTRICTION_LIST_IE, 	// HandoverRestrictionList,
	RRC_ESTABLISHMENT_CAUSE_IE, 	// RRCEstablishmentCause,
	SUBSCRIBERR_PROFILE_ID_RFP_IE, 	// SubscriberProfileIDforRFP,
	CS_FALLBACK_INDICATOR_IE, 		//CSFallbackIndicator,
	SRVCC_OPERRATION_POSSIBLE_IE, 	// SRVCCOperationPossible,
	ERAB_SETUP_LIST_CTXT_SURES_IE,  // ERABSetupListCtxtSURes,
	ERAB_LIST_IE, 					// ERABList,
	ERAB_TOBSETUP_LIST_CTXT_SUREQ_IE, // ERABToBeSetupListCtxtSUReq,
	ERAB_TOBSETUP_ITEM_CTXT_SUREQ_IE, // ERABToBeSetupItemCtxtSUReq,
	ERAB_SETUP_ITEM_CTXT_SURES_IE,  // ERABSetupItemCtxtSURes,

}S1apIETypes;

enum{
	ProtocolIEID 							id;
	Criticality 						criticality; 
	Presence 							presence; 
	S1apIETypes 						ie_type;
	select(S1apIE.ie_type){
		case(MME_UE_S1AP_ID_IE):			 		MME_UE_S1AP_ID;
		case(MME_NAME_IE):			 				MMEName;
		case(ENB_UE_S1AP_ID_IE):					ENB_UE_S1AP_ID;
		case(ENB_NAME_IE):			 				ENBName;
		case(NAS_PDU_IE):			 				NAS_PDU
		case(TIME_TO_WAIT_IE):			 			TimeToWait;
		case(CAUSE_IE):			 					Cause;
		case(TAI_IE):			 					TAI
		case(EUTRAN_CGI_IE):			 			EUTRAN_CGI;
		case(S_TMSI_IE):			 				S_TMSI;
		case(CSGID_IE):			 					CSGId;
		case(GUMMEI_IE):			 				GUMMEI;
		case(GLOBAL_ENB_ID_IE):			 			GlobalENBID;
		case(SUPPORTED_TAS_IE):			 			SupportedTAs;
		case(PAGING_DRX_IE):			 			PagingDRX;
		case(CSGID_LIST_IE):			 			CSGIdList ;
		case(SERVED_GUMMEIS_IE):			 		ServedGUMMEIs;
		case(RELATIVE_MME_CAPACITY_IE):			 	RelativeMMECapacity;
		case(CRITICALITY_DIAGNOSTICS_IE):			CriticalityDiagnostics;
		case(UE_RADIO_CAPABILITY_IE):			 	UERadioCapability;
		case(UE_AGGREGATE_MAX_BITRATE_IE):			UEAggregateMaximumBitrate;
		case(UE_SECURITY_CAPABILITIES_IE):			UESecurityCapabilities;
		case(SECURITY_KEY_IE):			 			SecurityKey;
		case(TRACE_ACTIVATION_IE):			 		TraceActivation;
		case(HANDOVER_RESTRICTION_LIST_IE):			HandoverRestrictionList;
		case(RRC_ESTABLISHMENT_CAUSE_IE):			RRCEstablishmentCause;
		case(SUBSCRIBERR_PROFILE_ID_RFP_IE):		SubscriberProfileIDforRFP;
		case(CS_FALLBACK_INDICATOR_IE):				CSFallbackIndicator;
		case(SRVCC_OPERRATION_POSSIBLE_IE):			SRVCCOperationPossible;
		case(ERAB_SETUP_LIST_CTXT_SURES_IE):		ERABSetupListCtxtSURes;
		case(ERAB_LIST_IE):			 				ERABList;
		case(ERAB_TOBSETUP_LIST_CTXT_SUREQ_IE):		ERABToBeSetupListCtxtSUReq;
		case(ERAB_TOBSETUP_ITEM_CTXT_SUREQ_IE):		ERABToBeSetupItemCtxtSUReq;
		case(ERAB_SETUP_ITEM_CTXT_SURES_IE):        ERABSetupItemCtxtSURes;
	};
}S1apIE;


// **************************************************************
//
// NAS TRANSPORT ELEMENTARY PROCEDURES
//
// **************************************************************



// **************************************************************
// DOWNLINK NAS TRANSPORT
// **************************************************************


struct  {
	S1apIE ie1 = {ID_MME_UE_S1AP_ID_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.MME_UE_S1AP_ID_IE };

	S1apIE ie2 = {ID_eNB_UE_S1AP_ID_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.ENB_UE_S1AP_ID_IE };

	S1apIE ie3 = {ID_NAS_PDU_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.NAS_PDU_IE };

	S1apIE ie4 = {ID_HandoverRestrictionList_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.HANDOVER_RESTRICTION_LIST_IE }

}DownlinkNASTransport;


// **************************************************************
// INITIAL UE MESSAGE
// **************************************************************
struct {
	S1apIE ie1 = {ID_eNB_UE_S1AP_ID_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.ENB_UE_S1AP_ID_IE };

	S1apIE ie2 = {ID_NAS_PDU_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.NAS_PDU_IE };

	S1apIE ie3 = {ID_TAI_PIEID ,Criticality.REJECT, Presence.MANDATORY, S1apIETypes.TAI_IE};

	S1apIE ie4 = {ID_EUTRAN_CGI_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.EUTRAN_CGI_IE };

	S1apIE ie5 = {ID_RRC_Establishment_Cause_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.RRC_ESTABLISHMENT_CAUSE_IE };

	S1apIE ie6 = {ID_S_TMSI_PIEID, Criticality.REJECT, Presence.OPTIONAL, S1apIETypes.S_TMSI_IE};

	S1apIE ie7 = {ID_CSG_Id_PIEID, Criticality.REJECT, Presence.OPTIONAL, S1apIETypes.CSGID_IE};

	S1apIE ie8 = {ID_GUMMEI_ID_PIEID, Criticality.REJECT, Presence.OPTIONAL, S1apIETypes.GUMMEI_IE };

}InitialUEMessage;


// **************************************************************
// UPLINK NAS TRANSPORT
// **************************************************************

struct {
	S1apIE ie1 = {ID_MME_UE_S1AP_ID_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.MME_UE_S1AP_ID_IE  };

	S1apIE ie2 = {ID_eNB_UE_S1AP_ID_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.ENB_UE_S1AP_ID_IE  };

	S1apIE ie3 = {ID_NAS_PDU_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.NAS_PDU_IE };

	S1apIE ie4 = {ID_EUTRAN_CGI_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.EUTRAN_CGI_IE };

	S1apIE ie5 = {ID_TAI_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.TAI_IE };


}UplinkNASTransport;




// **************************************************************
// S1 Setup Request
// **************************************************************



struct {
	S1apIE ie1 = {ID_Global_ENB_ID_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.GLOBAL_ENB_ID_IE };

	S1apIE ie2 = {ID_eNBname_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.ENB_NAME_IE  };

	S1apIE ie3 = {ID_SupportedTAs_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.SUPPORTED_TAS_IE };

	S1apIE ie4 = {ID_DefaultPagingDRX_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.PAGING_DRX_IE};

	S1apIE ie5 = {ID_CSG_IdList_PIEID, Criticality.REJECT, Presence.OPTIONAL, S1apIETypes.CSGID_LIST_IE };

}S1SetupRequest;


// **************************************************************
// S1 Setup Response
// **************************************************************


struct {
	S1apIE ie1 = {ID_MMEname_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.MME_NAME_IE };

	S1apIE ie2 = {ID_ServedGUMMEIs_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.SERVED_GUMMEIS_IE };

	S1apIE ie3 = {ID_RelativeMMECapacity_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.RELATIVE_MME_CAPACITY_IE };

	S1apIE ie4 = {ID_CriticalityDiagnostics_PIEID, Criticality.IGNORE, Presence.OPTIONAL,  S1apIETypes.CRITICALITY_DIAGNOSTICS_IE }; 

}S1SetupResponse;



// **************************************************************
// S1 Setup Failure
// **************************************************************

struct {
	S1apIE ie1 = {ID_Cause_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.CAUSE_IE };

	S1apIE ie2 = {ID_TimeToWait_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.TIME_TO_WAIT_IE }; //TimeToWait

	S1apIE ie3 = {ID_CriticalityDiagnostics_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.CRITICALITY_DIAGNOSTICS_IE };

}S1SetupFailure;



// **************************************************************
//
// INITIAL CONTEXT SETUP ELEMENTARY PROCEDURE
//
// **************************************************************

// **************************************************************
// Initial Context Setup Request
// **************************************************************


struct {
	S1apIE ie1 = {ID_MME_UE_S1AP_ID_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.MME_UE_S1AP_ID_IE };

	S1apIE ie2 = {ID_eNB_UE_S1AP_ID_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.ENB_UE_S1AP_ID_IE };

	S1apIE ie3 = {ENB_UE_S1AP_ID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.UE_AGGREGATE_MAX_BITRATE_IE }; //UEAggregateMaximumBitrate

	S1apIE ie4 = {ID_E_RABToBeSetupListCtxtSUReq_PIEID,  Criticality.REJECT, Presence.MANDATORY, S1apIETypes.ERAB_TOBSETUP_LIST_CTXT_SUREQ_IE }; //ERABToBeSetupListCtxtSUReq


	
	S1apIE ie5 = {ID_UESecurityCapabilities_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.UE_SECURITY_CAPABILITIES_IE  }; //UESecurityCapabilities

	S1apIE ie6 = {ID_SecurityKey_PIEID, Criticality.REJECT, Presence.MANDATORY, S1apIETypes.SECURITY_KEY_IE }; //SecurityKey

	S1apIE ie7 = { ID_TraceActivation_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.TRACE_ACTIVATION_IE }; //TraceActivation

	S1apIE ie8 = { ID_HandoverRestrictionList_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.HANDOVER_RESTRICTION_LIST_IE }; //HandoverRestrictionList



	S1apIE ie9 = {ID_UERadioCapability_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.UE_RADIO_CAPABILITY_IE }; //UERadioCapability
	
	S1apIE ie10 = { ID_SubscriberProfileIDforRFP_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.SUBSCRIBER_PROFILE_ID_FOR_RFP_IE }; //SubscriberProfileIDforRFP

	S1apIE ie11 = { ID_CSFallbackIndicator_PIEID, Criticality.REJECT, Presence.OPTIONAL, S1apIETypes.CS_FALLBACK_INDICATOR_IE }; //CSFallbackIndicator 

	S1apIE ie12 = { ID_SRVCCOperationPossible_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.SRVCC_OPERATION_POSSIBLE_IE  }; //SRVCCOperationPossible

}InitialContextSetupRequest;





// **************************************************************
// Initial Context Setup Response
// **************************************************************



struct {
	
	S1apIE ie1 = {ID_MME_UE_S1AP_ID_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.MME_UE_S1AP_ID_IE };

	S1apIE ie2 = {ID_eNB_UE_S1AP_ID_PIEID , Criticality.IGNORE,Presence.MANDATORY, S1apIETypes.ENB_UE_S1AP_ID_IE };

	S1apIE ie3 = {ID_E_RABSetupListCtxtSURes_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.ERAB_SETUP_LIST_CTXT_SURES_IE }; //ERABSetupListCtxtSURes

	S1apIE ie4 = {ID_E_RABFailedToSetupListCtxtSURes_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.ERAB_LIST_IE }; //ERABList ,

	S1apIE ie5 = {ID_CriticalityDiagnostics_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.CRITICALITY_DIAGNOSTICS_IE }; // CriticalityDiagnostics

}InitialContextSetupResponse;





// **************************************************************
// Initial Context Setup Failure
// **************************************************************
struct {
	
	S1apIE ie1 = {ID_MME_UE_S1AP_ID_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.MME_UE_S1AP_ID_IE };

	S1apIE ie2 = {ID_eNB_UE_S1AP_ID_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.ENB_UE_S1AP_ID_IE };

	S1apIE ie3 = {ID_Cause_PIEID, Criticality.IGNORE, Presence.MANDATORY, S1apIETypes.CAUSE_IE };

	S1apIE ie4 = {ID_CriticalityDiagnostics_PIEID, Criticality.IGNORE, Presence.OPTIONAL, S1apIETypes.CRITICALITY_DIAGNOSTICS_IE };

}InitialContextSetupFailure;


// **************************************************************
// New Data Structures: Not sure how its used. 
// **************************************************************


//TODO: size(ERABToBeSetupItemCtxtSUReqIEs)* maxNrOfE-RABs)
ERABToBeSetupItemCtxtSUReqIEs ERABToBeSetupListCtxtSUReq<8..2^16-1>;


S1apIE ERABToBeSetupItemCtxtSUReqIEs = {ID_E_RABToBeSetupItemCtxtSUReq_PIEID, Criticality.REJECT, Criticality.REJECT, S1apIETypes.ERAB_TOBSETUP_ITEM_CTXT_SUREQ_IE }; //ERABToBeSetupItemCtxtSUReq



//TODO: size(ERABSetupItemCtxtSUResIEs) * maxNrOfE-RABs
ERABSetupItemCtxtSUResIEs ERABSetupListCtxtSURes<8..2^16-1>

S1apIE ERABSetupItemCtxtSUResIEs = {ID_E_RABSetupItemCtxtSURes_PIEID , Criticality.IGNORE, Presence.MANDATORY, ERAB_SETUP_ITEM_CTXT_SURES_IE }; // ERABSetupItemCtxtSURes


// **************************************************************
// S1AP-PDU-DESCRIPTIONS.  
// **************************************************************

// S1AP-PDU-Descriptions - InitialUEAttach Procedure requirements only. 



// -------  Interface Elementary Procedure Class

/*
   Under-specified types (opaque, variable-length vectors, and
   structures that contain opaque) cannot be assigned values.  No fields
   of a multi-element structure or vector may be elided.
*/

/*
// Elementary Procedure Defintions


enum {
	INITIAL_CONTEXT_SETUP_REQUEST, //InitialContextSetupRequest,
	DOWNLINK_NAS_TRANSPORT, //DownlinkNASTransport,
	INITIAL_UE_MESSAGE, //InitialUEMessage,
	UPLINK_NAS_TRANSPORT, //UplinkNASTransport,
	S1_SETUP_REQUEST, //S1SetupRequest
}InitiatingMessageType;

enum {
	INITIAL_CONTEXT_SETUP_RESPONSE, //InitialContextSetupResponse,
	S1_SETUP_RESPONSE, //S1SetupResponse

}SuccessfulOutcomeType;

enum {
	INITIAL_CONTEXT_SETUP_FAILURE, //InitialContextSetupFailure
	S1_SETUP_FAILURE, //S1SetupFailure
	
}UnsuccessfulOutcomeType;


struct{
	InitiatingMessageType 			initiating_message_type;
	select(InitiatingMessage.initiating_message_type){
		case(INITIAL_CONTEXT_SETUP_REQUEST): 	InitialContextSetupRequest;
		case(DOWNLINK_NAS_TRANSPORT):			DownlinkNASTransport;
		case(INITIAL_UE_MESSAGE): 				InitialUEMessage;
		case(UPLINK_NAS_TRANSPORT): 			UplinkNASTransport;
		case(S1_SETUP_REQUEST): 				S1SetupRequest;
	};
}InitiatingMessage;


struct {
	SuccessfulOutcomeType 			successful_outcome_type; 
	select(SuccessfulOutcome.successful_outcome_type){
		case(INITIAL_CONTEXT_SETUP_RESPONSE): 	InitialContextSetupResponse;
		case(S1_SETUP_RESPONSE): 				S1SetupResponse;
	};

}SuccessfulOutcome;

struct {
	UnsuccessfulOutcomeType 		unsuccessful_outcome_type; 
	select(UnsuccessfulOutcome.unsuccessful_outcome_type){
		case(INITIAL_CONTEXT_SETUP_FAILURE): 	InitialContextSetupFailure;
		case(S1_SETUP_FAILURE): 				S1SetupFailure;
	};
	
}UnsuccessfulOutcome;


// ************************************************************************
// -------  Interface PDU Definition
// ************************************************************************


struct {
	InitiatingMessageType 			initiating_message_type;
	SuccessfulOutcomeType 			successful_outcome_type;
	UnsuccessfulOutcomeType 		unsuccessful_outcome_type; 
	select(S1APPDU.initiating_message_type){
		case(INITIAL_CONTEXT_SETUP_REQUEST): 	InitialContextSetupRequest;
		case(DOWNLINK_NAS_TRANSPORT):			DownlinkNASTransport;
		case(INITIAL_UE_MESSAGE): 				InitialUEMessage;
		case(UPLINK_NAS_TRANSPORT): 			UplinkNASTransport;
		case(S1_SETUP_REQUEST): 				S1SetupRequest;
	};

	select(S1APPDU.successful_outcome_type){
		case(INITIAL_CONTEXT_SETUP_RESPONSE): 	InitialContextSetupResponse;
		case(S1_SETUP_RESPONSE): 				S1SetupResponse;
	};

	select(S1APPDU.unsuccessful_outcome_type){
		case(INITIAL_CONTEXT_SETUP_FAILURE): 	InitialContextSetupFailure;
		case(S1_SETUP_FAILURE): 				S1SetupFailure;
	};
}S1APPDU;


// ************************************************************************
// Defining the Elementary-Procedures


struct {
	InitiatingMessageType 			initiating_message_type;
	ProcedureCodeType				procedure_code;  					//TODO : UNIQUE
	Criticality 					criticality;
	SuccessfulOutcomeType 			successful_outcome_type<0..2>; 		// OPTIONAL
	UnsuccessfulOutcomeType 		unsuccessful_outcome_type<0..2>;    // OPTIONAL

	select(S1APElementaryProcedure.initiating_message_type){
		case(INITIAL_CONTEXT_SETUP_REQUEST): 	InitialContextSetupRequest;
		case(DOWNLINK_NAS_TRANSPORT):			DownlinkNASTransport;
		case(INITIAL_UE_MESSAGE): 				InitialUEMessage;
		case(UPLINK_NAS_TRANSPORT): 			UplinkNASTransport;
		case(S1_SETUP_REQUEST): 				S1SetupRequest;
	} initiating_message;

	select(S1APElementaryProcedure.successful_outcome_type){
		case(INITIAL_CONTEXT_SETUP_RESPONSE): 	InitialContextSetupResponse;
		case(S1_SETUP_RESPONSE): 				S1SetupResponse;
	}successful_outcome;

	select(S1APElementaryProcedure.unsuccessful_outcome_type){
		case(INITIAL_CONTEXT_SETUP_FAILURE): 	InitialContextSetupFailure;
		case(S1_SETUP_FAILURE): 				S1SetupFailure;
	}unsuccessful_outcome;

}S1APElementaryProcedure;

// EP9
S1APElementaryProcedure InitialContextSetup_EP = { 
	InitiatingMessageType.INITIAL_CONTEXT_SETUP_REQUEST, 
	ID_InitialContextSetup_PC, 
	Criticality.REJECT,	
	SuccessfulOutcomeType.INITIAL_CONTEXT_SETUP_RESPONSE,
	UnsuccessfulOutcomeType.INITIAL_CONTEXT_SETUP_FAILURE };


// EP11
S1APElementaryProcedure InitialContextSetup_EP = { 
	InitiatingMessageType.DOWNLINK_NAS_TRANSPORT, 
	ID_downlinkNASTransport_PC, 
	Criticality.IGNORE
};


// EP12
S1APElementaryProcedure InitialContextSetup_EP = { 
	InitiatingMessageType.INITIAL_UE_MESSAGE, 
	ID_initialUEMessage_PC, 
	Criticality.IGNORE	
};

// EP13
S1APElementaryProcedure InitialContextSetup_EP = { 
	InitiatingMessageType.UPLINK_NAS_TRANSPORT, 
	ID_uplinkNASTransport_PC, 
	Criticality.IGNORE
};


// EP17
S1APElementaryProcedure InitialContextSetup_EP = { 
	InitiatingMessageType.S1_SETUP_REQUEST, 
	ID_S1Setup_PC, 
	Criticality.REJECT,	
	SuccessfulOutcomeType.S1_SETUP_RESPONSE,
	UnsuccessfulOutcomeType.S1_SETUP_FAILURE };



/*

// -------  Interface Elementary Procedure List

// Why are these defined? Is this needed? 
enum{

	InitialContextSetup,
	S1Setup,
	DownlinkNASTransport,
	InitialUEMessage,
	UplinkNASTransport,
	
}S1APElementaryProcedureNames;

struct{
	select (S1APElementaryProcedureNames) {
		case(InitialContextSetup):		InitialContextSetup_EP;
		case(S1Setup):					S1Setup_EP;
		case(DownlinkNASTransport): 	DownlinkNASTransport_EP;
		case(InitialUEMessage): 		InitialUEMessage_EP;
		case(UplinkNASTransport): 		UplinkNASTransport_EP;
	}; 
}S1apElementaryProcedures;

*/

