#lang ivy1.7

include pcap
include order
include s1ap_packet
include s1ap_connection
include s1ap_deser

# This is a monitor that reads a file of S1AP packets in pcap format
# and tracks the protocol, checking that the packet sequence satisfies
# the protocol specification

# Compile the monitor like this:
# 
#     ivyc s1ap_monitor.ivy
#
# Run it like this:
# 
#     ./sqap_monitor file.pcap

# where 'file.pcap' is a file of captured packets in pcap format. The
# monitor assumes that *only* S1AP packets are present in the file,
# so must be captured on a virtual network or appropriately filtered.
#
#

# Instantiate a pcap file reader with our packet type and deserializer

instance pc : pcap(s1ap_packet, s1ap_deser)

# Print a packet on stdout. In the compiled REPL importing 'show_packet'
# causes calls to be logged to stdout.

action show_packet(src:ip.endpoint, dst:ip.endpoint, pkt:s1ap_packet)
import show_packet

# The wire specification monitors this action.

action packet_event(src:ip.endpoint, dst:ip.endpoint, pkt:s1ap_packet) = {}

# For each packet read, first print out the packet then verify the packet.

implement pc.handle(src:ip.endpoint, dst:ip.endpoint, pkt:s1ap_packet) {
    call show_packet(src, dst, pkt);
    call packet_event(src, dst, pkt);
}

attribute radix=16 # print in hex
