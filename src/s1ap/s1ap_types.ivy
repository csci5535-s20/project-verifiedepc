#lang ivy1.7

# Terminology
# -----------

# An *endpoint* is consists of a protocol, a network address and a
# port. Endpoints uniquely identify entities in the protocol.

# A *connection* is a form of session that may be established between
# two endpoints, one having the role of *eNB* and the other of 
# *MME*. 

# A *cid* is a connection identifier. Connection identifiers are
# uniquely associated to connections and are not reused.


# Common types
# ------------

# This section describes the common types used by the protocol specification.

# ### Connection identifiers

# The type 'cid' represents a cid as a 64-bit unsigned integer.

type cid

# ### Application identifiers
#
# An application identifier (aid) is a unique identifier for an
# application endpoint, that is, one of the two communicating 
# applications in a S1AP connection, either at the server or the
# client end of the connection. For now we identify an aid with a 
# cid. The type aid is an alias for cid.

alias aid = cid

# ### Packet numbers
#
# The type 'pkt_num' represents a packet number as a 64-bit unsigned number.

type pkt_num

# ### Time values
#
# The type 'microsecs' represents a time value in microseconds.
# Currently, this type is uninterpreted.

type microsecs

# Tye type error code is a two-bytec-de for an error

type error_code

# ### Procedure code bits
#
# The type 'pcode_bits' represents the procedure code as a 8-bit unsigned integer.

type pcode_bits
interpret pcode_bits -> bv[8]

# ### PLMN Identity
#
# The type 'plmn_octet' represents the PLMN Identity as a 24-bit unsigned integer.

type plmn_octet
interpret plmn_octet -> bv[24]

# ### TAC
#
# The type 'tac_octet' represents the TAC as a 16-bit unsigned integer.

type tac_octet
interpret tac_octet -> bv[16]

# ### Type of Message
#
# The type 'message_enumerated' means it can be any set with at least one element.

type message_enumerated = {Initiating_Message,Successful_Outcome,Unsuccessful_Outcome}

# ### DRX
#
# The type 'drx_enumerated' means it can be any set with at least one element.

type drx_enumerated = {32,64,128,256}

# ### Cell Identity
#
# The type 'cell_bits' represents the Cell Identity as a 28-bit unsigned integer.

type cell_bits
interpret cell_bits -> bv[28]

# ### RRC Establishment Cause
#
# The type 'rrc_enumerated' means it can be any set with at least one element.

type rrc_enumerated = {emergency,highPriorityAccess,mt-Access,mo-Signalling}

# ### NAS-PDU

type nas_pdu_string

# ### Priority Level
#
# Tye type 'pLevel-bits' represents the Priority Level as a 4-bit unsigned integer.

type pLevel-bits
interpret pLevel-bits -> bv[4]

# ### Pre-emption Capability

type preCap_enumerated = {shall_not_trigger_pre-emption,may_trigger_pre-emption}

# ### Pre-emption Vulnerability

type preVul_enumerated = {not_pre-emptable,pre-emptable}

# ### GTP-TEID

type gtp_octet
interpret gtp_octet -> bv[32]
